var HtmlEntities_map = {
    "'": "&amp;apos;",
    "&lt;": "&amp;lt;",
    "&gt;": "&amp;gt;",
    " ": "&amp;nbsp;",
    "¡": "&amp;iexcl;",
    "¢": "&amp;cent;",
    "£": "&amp;pound;",
    "¤": "&amp;curren;",
    "¥": "&amp;yen;",
    "¦": "&amp;brvbar;",
    "§": "&amp;sect;",
    "¨": "&amp;uml;",
    "©": "&amp;copy;",
    "ª": "&amp;ordf;",
    "«": "&amp;laquo;",
    "¬": "&amp;not;",
    "®": "&amp;reg;",
    "¯": "&amp;macr;",
    "°": "&amp;deg;",
    "±": "&amp;plusmn;",
    "²": "&amp;sup2;",
    "³": "&amp;sup3;",
    "´": "&amp;acute;",
    "µ": "&amp;micro;",
    "¶": "&amp;para;",
    "·": "&amp;middot;",
    "¸": "&amp;cedil;",
    "¹": "&amp;sup1;",
    "º": "&amp;ordm;",
    "»": "&amp;raquo;",
    "¼": "&amp;frac14;",
    "½": "&amp;frac12;",
    "¾": "&amp;frac34;",
    "¿": "&amp;iquest;",
    "À": "&amp;Agrave;",
    "Á": "&amp;Aacute;",
    "Â": "&amp;Acirc;",
    "Ã": "&amp;Atilde;",
    "Ä": "&amp;Auml;",
    "Å": "&amp;Aring;",
    "Æ": "&amp;AElig;",
    "Ç": "&amp;Ccedil;",
    "È": "&amp;Egrave;",
    "É": "&amp;Eacute;",
    "Ê": "&amp;Ecirc;",
    "Ë": "&amp;Euml;",
    "Ì": "&amp;Igrave;",
    "Í": "&amp;Iacute;",
    "Î": "&amp;Icirc;",
    "Ï": "&amp;Iuml;",
    "Ð": "&amp;ETH;",
    "Ñ": "&amp;Ntilde;",
    "Ò": "&amp;Ograve;",
    "Ó": "&amp;Oacute;",
    "Ô": "&amp;Ocirc;",
    "Õ": "&amp;Otilde;",
    "Ö": "&amp;Ouml;",
    "×": "&amp;times;",
    "Ø": "&amp;Oslash;",
    "Ù": "&amp;Ugrave;",
    "Ú": "&amp;Uacute;",
    "Û": "&amp;Ucirc;",
    "Ü": "&amp;Uuml;",
    "Ý": "&amp;Yacute;",
    "Þ": "&amp;THORN;",
    "ß": "&amp;szlig;",
    "à": "&amp;agrave;",
    "á": "&amp;aacute;",
    "â": "&amp;acirc;",
    "ã": "&amp;atilde;",
    "ä": "&amp;auml;",
    "å": "&amp;aring;",
    "æ": "&amp;aelig;",
    "ç": "&amp;ccedil;",
    "è": "&amp;egrave;",
    "é": "&amp;eacute;",
    "ê": "&amp;ecirc;",
    "ë": "&amp;euml;",
    "ì": "&amp;igrave;",
    "í": "&amp;iacute;",
    "î": "&amp;icirc;",
    "ï": "&amp;iuml;",
    "ð": "&amp;eth;",
    "ñ": "&amp;ntilde;",
    "ò": "&amp;ograve;",
    "ó": "&amp;oacute;",
    "ô": "&amp;ocirc;",
    "õ": "&amp;otilde;",
    "ö": "&amp;ouml;",
    "÷": "&amp;divide;",
    "ø": "&amp;oslash;",
    "ù": "&amp;ugrave;",
    "ú": "&amp;uacute;",
    "û": "&amp;ucirc;",
    "ü": "&amp;uuml;",
    "ý": "&amp;yacute;",
    "þ": "&amp;thorn;",
    "ÿ": "&amp;yuml;",
    "Œ": "&amp;OElig;",
    "œ": "&amp;oelig;",
    "Š": "&amp;Scaron;",
    "š": "&amp;scaron;",
    "Ÿ": "&amp;Yuml;",
    "ƒ": "&amp;fnof;",
    "ˆ": "&amp;circ;",
    "˜": "&amp;tilde;",
    "Α": "&amp;Alpha;",
    "Β": "&amp;Beta;",
    "Γ": "&amp;Gamma;",
    "Δ": "&amp;Delta;",
    "Ε": "&amp;Epsilon;",
    "Ζ": "&amp;Zeta;",
    "Η": "&amp;Eta;",
    "Θ": "&amp;Theta;",
    "Ι": "&amp;Iota;",
    "Κ": "&amp;Kappa;",
    "Λ": "&amp;Lambda;",
    "Μ": "&amp;Mu;",
    "Ν": "&amp;Nu;",
    "Ξ": "&amp;Xi;",
    "Ο": "&amp;Omicron;",
    "Π": "&amp;Pi;",
    "Ρ": "&amp;Rho;",
    "Σ": "&amp;Sigma;",
    "Τ": "&amp;Tau;",
    "Υ": "&amp;Upsilon;",
    "Φ": "&amp;Phi;",
    "Χ": "&amp;Chi;",
    "Ψ": "&amp;Psi;",
    "Ω": "&amp;Omega;",
    "α": "&amp;alpha;",
    "β": "&amp;beta;",
    "γ": "&amp;gamma;",
    "δ": "&amp;delta;",
    "ε": "&amp;epsilon;",
    "ζ": "&amp;zeta;",
    "η": "&amp;eta;",
    "θ": "&amp;theta;",
    "ι": "&amp;iota;",
    "κ": "&amp;kappa;",
    "λ": "&amp;lambda;",
    "μ": "&amp;mu;",
    "ν": "&amp;nu;",
    "ξ": "&amp;xi;",
    "ο": "&amp;omicron;",
    "π": "&amp;pi;",
    "ρ": "&amp;rho;",
    "ς": "&amp;sigmaf;",
    "σ": "&amp;sigma;",
    "τ": "&amp;tau;",
    "υ": "&amp;upsilon;",
    "φ": "&amp;phi;",
    "χ": "&amp;chi;",
    "ψ": "&amp;psi;",
    "ω": "&amp;omega;",
    "ϑ": "&amp;thetasym;",
    "ϒ": "&amp;Upsih;",
    "ϖ": "&amp;piv;",
    "–": "&amp;ndash;",
    "—": "&amp;mdash;",
    "‘": "&amp;lsquo;",
    "’": "&amp;rsquo;",
    "‚": "&amp;sbquo;",
    "“": "&amp;ldquo;",
    "”": "&amp;rdquo;",
    "„": "&amp;bdquo;",
    "†": "&amp;dagger;",
    "‡": "&amp;Dagger;",
    "•": "&amp;bull;",
    "…": "&amp;hellip;",
    "‰": "&amp;permil;",
    "′": "&amp;prime;",
    "″": "&amp;Prime;",
    "‹": "&amp;lsaquo;",
    "›": "&amp;rsaquo;",
    "‾": "&amp;oline;",
    "⁄": "&amp;frasl;",
    "€": "&amp;euro;",
    "ℑ": "&amp;image;",
    "℘": "&amp;weierp;",
    "ℜ": "&amp;real;",
    "™": "&amp;trade;",
    "ℵ": "&amp;alefsym;",
    "←": "&amp;larr;",
    "↑": "&amp;uarr;",
    "→": "&amp;rarr;",
    "↓": "&amp;darr;",
    "↔": "&amp;harr;",
    "↵": "&amp;crarr;",
    "⇐": "&amp;lArr;",
    "⇑": "&amp;UArr;",
    "⇒": "&amp;rArr;",
    "⇓": "&amp;dArr;",
    "⇔": "&amp;hArr;",
    "∀": "&amp;forall;",
    "∂": "&amp;part;",
    "∃": "&amp;exist;",
    "∅": "&amp;empty;",
    "∇": "&amp;nabla;",
    "∈": "&amp;isin;",
    "∉": "&amp;notin;",
    "∋": "&amp;ni;",
    "∏": "&amp;prod;",
    "∑": "&amp;sum;",
    "−": "&amp;minus;",
    "∗": "&amp;lowast;",
    "√": "&amp;radic;",
    "∝": "&amp;prop;",
    "∞": "&amp;infin;",
    "∠": "&amp;ang;",
    "∧": "&amp;and;",
    "∨": "&amp;or;",
    "∩": "&amp;cap;",
    "∪": "&amp;cup;",
    "∫": "&amp;int;",
    "∴": "&amp;there4;",
    "∼": "&amp;sim;",
    "≅": "&amp;cong;",
    "≈": "&amp;asymp;",
    "≠": "&amp;ne;",
    "≡": "&amp;equiv;",
    "≤": "&amp;le;",
    "≥": "&amp;ge;",
    "⊂": "&amp;sub;",
    "⊃": "&amp;sup;",
    "⊄": "&amp;nsub;",
    "⊆": "&amp;sube;",
    "⊇": "&amp;supe;",
    "⊕": "&amp;oplus;",
    "⊗": "&amp;otimes;",
    "⊥": "&amp;perp;",
    "⋅": "&amp;sdot;",
    "⌈": "&amp;lceil;",
    "⌉": "&amp;rceil;",
    "⌊": "&amp;lfloor;",
    "⌋": "&amp;rfloor;",
    "⟨": "&amp;lang;",
    "⟩": "&amp;rang;",
    "◊": "&amp;loz;",
    "♠": "&amp;spades;",
    "♣": "&amp;clubs;",
    "♥": "&amp;hearts;",
    "♦": "&amp;diams;"
};

var HtmlEntitiesDecode = function (string) {
    var entityMap = HtmlEntities_map;
    for (var key in entityMap) {
        var entity = entityMap[key];
        var regex = new RegExp(entity, 'g');
        string = string.replace(regex, key);
    }
    string = string.replace(/&amp;quot;/g, '"');
    string = string.replace(/&amp;amp;/g, '&amp;');
    return string;
}

var HtmlEntitiesEncode = function (string) {
    var entityMap = HtmlEntities_map;
    string = string.replace(/&amp;/g, '&amp;amp;');
    string = string.replace(/"/g, '&amp;quot;');
    for (var key in entityMap) {
        var entity = entityMap[key];
        var regex = new RegExp(key, 'g');
        string = string.replace(regex, entity);
    }
    return string;
}